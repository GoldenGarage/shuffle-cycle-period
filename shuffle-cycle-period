#!/usr/bin/env /usr/local/bin/node
// ====================================================================================================================
//
// shuffle-cycle-period {numberOfCards}
//
// Calculate the Shuffle Cycle Period for a specific number of cards.
//
//   {numberOfCards} - the number of cards in the deck to be shuffled.
//
// The Shuffle Cycle is defined as
//
//   While holding the deck:
//   step 1. Take the top card off the deck and set it on the table.
//   step 2. Take the next card off the top and put it on the bottom of the deck in your hand.
//   step 3. Continue steps 1 and 2 until all cards are on the table.  This is a round.
//
// The Shuffle Cycle Period is the number of rounds required to return to the original order.
//
//   step 4. Pick up the deck from the table and repeat steps 1-3 until the deck is in the original order.
//
// last-modified: <2013-12-17 21:41:39 golden@asterix>
//
// ====================================================================================================================

// --------------------------------------------------------------------------------------------------------------------

// main function (called from bottom of file)

function main()
{
    // ... take a number of cards in the deck as a command line argument ..............................................

    var numberOfCards = process.argv[ 2 ];                                       // argv = [ node, script.js, arg[0] ]

    if ( ! numberOfCards )   process.exit( -1 );                                 // need number of cards
    if ( numberOfCards < 1 ) process.exit( -1 );                                 // need at least one card


    // ... step 0. You are given a deck containing n cards. ...........................................................

    var hand  = Deck.create( numberOfCards );                                    // create a new deck in hand
    var table = Deck.create( 0 );                                                // no cards on the table


    //     step 1. Take the top card off the deck and set it on the table.
    //     step 2. Take the next card off the top and put it on the bottom of the deck in your hand.
    // ... step 3. Continue steps 1 and 2 until all cards are on the table.  This is a round. .........................

    shuffleCards( hand, table );                                                 // shuffle cards from hand to table


    // ... step 4. Pick up the deck from the table and repeat steps 1-3 until the deck is in the original order. ......

    hand  = table;                                                               // pick up deck from the table
    table = Deck.create( 0 );                                                    // the table is now empty

    var rounds = 0;                                                              // initialize round counter

    while ( isShuffled( hand ) )                                                 // while hand is still shuffled
    { 
        rounds++;                                                                // count the rounds

        shuffleCards( hand, table );                                             // shuffle from hand to table

        hand = table;                                                            // pick up deck from the table
        table = Deck.create( 0 );                                                // the table is now empty
    }


    // ... step 5. [Display] how many rounds it will take to put a deck back into the original order. .................

    console.log( rounds );                                                       // display the result
}

// --------------------------------------------------------------------------------------------------------------------

// shuffle cards between hand and table according to rules (see steps 1, 2, 3 below)

function shuffleCards( hand, table )
{
    var nextCard = hand.top;                                                     // next card is the top of the hand

    // ... step 3. Continue steps 1 and 2 until all cards are on the table.  This is a round. .........................

    while ( nextCard )                                                           // while there are more cards in hand
    {
        // step 1. Take the top card off the deck and set it on the table. ............................................

                 hand.top = nextCard.next;                                       // take top card off of the hand
            nextCard.next = null;
        
            nextCard.next = table.top;                                           // put card on top of table
                table.top = nextCard;

                 nextCard = hand.top;                                            // next card is on top of hand

        // if there are no other cards on the table, this is also the bottom card
        if ( ! table.bottom ) table.bottom = table.top;                          // check for first card on table


        // step 2. Take the next card off the top and put it on the bottom of the deck in your hand. ..................

        // if there not at least two cards remaining, skip this step
        if ( ! ( nextCard && nextCard.next ) ) continue;                         // this step needs more than one card

                 hand.top = nextCard.next;                                       // take top card off of the hand
            nextCard.next = null;
        
         hand.bottom.next = nextCard;                                            // put card on bottom of hand
              hand.bottom = nextCard;

                 nextCard = hand.top;                                            // next card is on top of hand
    }
}

// --------------------------------------------------------------------------------------------------------------------

function isShuffled( deck )
{
    if ( ! deck.top ) return true;                                               // if deck's empty, it's "shuffled"

    if ( deck.top.index != 1 ) return true;                                      // first card should have index 1

    var lastCard = deck.top;                                                     // start with the top card
    var nextCard = lastCard.next;

    while ( nextCard )                                                           // loop through the remaining cards
    {
        if ( nextCard.index != lastCard.index +1 ) return true;                  // are the cards in the correct order?

        lastCard = nextCard;                                                     // next card
        nextCard = nextCard.next;
    }
                                                                                 // the cards are in order
    return false;                                                                // deck is NOT shuffled!
}

// --------------------------------------------------------------------------------------------------------------------

var Card = function ( index, next )
{
     this.index = index;                                                         // unique id of card
      this.next = next;                                                          // next card in deck
}

// --------------------------------------------------------------------------------------------------------------------

var Deck = function ( top, bottom )
{
       this.top = top;                                                           // top card of deck
    this.bottom = bottom;                                                        // bottom card in deck

    if ( ! this.bottom ) this.bottom = this.top;                                 // single card is both top and bottom
}

Deck.create = function ( numberOfCards )                                         // class method to create a new deck
{
    if ( numberOfCards == 0 ) return new Deck();                                 // zero cards, return an empty deck

    var bottomCard = new Card( 1 );                                              // create the initial card of the deck
    var topCard    = bottomCard;

    for ( var i = 1; i < numberOfCards; i++ )                                    // skip index 0 - the initial card
    {
        var newCard = new Card( i +1 );                                          // create a new card

        bottomCard.next = newCard;                                               // put card on bottom of deck
        bottomCard      = newCard;
    }

    return new Deck( topCard, bottomCard );
}

// --------------------------------------------------------------------------------------------------------------------

// execute main loop

main();


// ====================================================================================================================
// --------------------------------------------------------------------------------------------------------------------
// Local Variables:
// mode: javascript
// End:
